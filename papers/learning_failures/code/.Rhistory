summary(lm((mid_adoption_any=="Yes")~treatment*DAP_use, data=all[all$adoption_any=="Yes",]))
summary(lm((mid_adoption_any=="Yes")~treatment*correctweeding, data=all[all$adoption_any=="Yes",]))
###Caro's code to create figure by treatment group:
# all=subset(all,treatment==FALSE)
#
# midline_farmers <- merge(midline_farmers
#                          ,baseline_farmers[,c("farmer_ID","Check2.check.maize.video_shown")]
#                          ,by="farmer_ID")
#
# endline_farmers <- merge(endline_farmers
#                          ,baseline_farmers[,c("farmer_ID","Check2.check.maize.video_shown")]
#                          ,by="farmer_ID")
#
# baseline_farmers=subset(baseline_farmers,Check2.check.maize.video_shown==FALSE)
#
# midline_farmers=subset(midline_farmers,Check2.check.maize.video_shown==FALSE)
#
# endline_farmers=subset(endline_farmers,Check2.check.maize.video_shown==FALSE)
###########################alluvial graphs########################################
library(easyalluvial)
library(tidyverse)
stack_1 <- baseline_farmers[c("farmer_ID","adoption_onfield")]
stack_1$round <- "baseline"
stack_2 <- midline_farmers[c("farmer_ID","mid_adoption_onfield")]
stack_2$round <- "midline"
names(stack_2) <- c("farmer_ID","adoption_onfield","round")
stack_3 <- endline_farmers[c("farmer_ID","end_adoption_onfield")]
stack_3$round <- "endline"
names(stack_3) <- c("farmer_ID","adoption_onfield","round")
alluvial_frame <- rbind(stack_1, stack_2, stack_3)
alluvial_frame <- subset(alluvial_frame, !is.na(alluvial_frame$adoption_onfield))
### make panel ba
to_drop <- names(table(alluvial_frame$farmer_ID))[table(alluvial_frame$farmer_ID)!=3]
alluvial_frame <- subset(alluvial_frame, !(farmer_ID %in% to_drop))
alluvial_frame$farmer_ID <- as.character(alluvial_frame$farmer_ID)
col_vector = c('green', 'red')
alluvial_frame$round[alluvial_frame$round == "baseline"] <- "survey 1"
alluvial_frame$round[alluvial_frame$round == "midline"] <- "survey 2"
alluvial_frame$round[alluvial_frame$round == "endline"] <- "survey 3"
alluvial_long(alluvial_frame
, key = round
, value = adoption_onfield
, id = farmer_ID
, order_levels_key =c("survey 1","survey 2","survey 3")
,bins = 2
,bin_labels = c("nonadoption","adoption")
, fill_by = 'value'
, col_vector_flow = col_vector
, col_vector_value = col_vector
) +theme(axis.text=element_text(size=18),
axis.title=element_text(size=14,face="bold"))
prop.table(table(alluvial_frame$adoption_onfield[alluvial_frame$round=='baseline']))
prop.table(table(alluvial_frame$adoption_onfield[alluvial_frame$round=='midline']))
prop.table(table(alluvial_frame$adoption_onfield[alluvial_frame$round=='endline']))
prop.table(table(all$adoption_onfield ==1))
prop.table(table(all$adoption_onfield ==1 & all$mid_adoption_onfield==0))
prop.table(table(all$adoption_onfield ==1 & all$mid_adoption_onfield==1  & all$end_adoption_onfield==0))
prop.table(table(all$adoption_onfield ==0))
prop.table(table(all$adoption_onfield ==0 & all$mid_adoption_onfield==1))
prop.table(table(all$adoption_onfield ==0 & all$mid_adoption_onfield==0  & all$end_adoption_onfield==1))
prop.table(table(all$adoption_onfield ==1 & all$mid_adoption_onfield==0  & all$end_adoption_onfield==1))
prop.table(table(all$adoption_onfield ==0 & all$mid_adoption_onfield==1  & all$end_adoption_onfield==0))
##prepare first variable - adoption at household level
baseline_farmers$agro <- ifelse(baseline_farmers$Check2.check.maize.q25b=="d",1,0)
baseline_farmers$agro[is.na(baseline_farmers$Check2.check.maize.q25b)] <- NA
baseline_farmers$agro[baseline_farmers$Check2.check.maize.q25a==0] = 0
midline_farmers$mid_agro <- ifelse(midline_farmers$check.maize.q25b=="d",1,0)
midline_farmers$mid_agro[is.na(midline_farmers$check.maize.q25b)] <- NA
midline_farmers$mid_agro[midline_farmers$check.maize.q25a=="No"] = 0
endline_farmers$end_agro <- ifelse(endline_farmers$check.maize.q25b=="d",1,0)
endline_farmers$end_agro[is.na(endline_farmers$check.maize.q25b)] <- NA
endline_farmers$end_agro[endline_farmers$check.maize.q25a=="No"] = 0
baseline_farmers$Land_Races<-(baseline_farmers$Check2.check.maize.q31=="Land_Races")
baseline_farmers$Land_Races<-ifelse(baseline_farmers$Land_Races=="TRUE",1,0)
midline_farmers$mid_Land_Races<-(midline_farmers$check.maize.q31=="Land_Races")
midline_farmers$mid_Land_Races<-ifelse(midline_farmers$mid_Land_Races=="TRUE",1,0)
endline_farmers$end_Land_Races<-(endline_farmers$check.maize.q31=="Land_Races")
endline_farmers$end_Land_Races<-ifelse(endline_farmers$end_Land_Races=="TRUE",1,0)
baseline_farmers$farmer_saved_seed<-((baseline_farmers$Check2.check.maize.q32=="a")|(baseline_farmers$Check2.check.maize.q32=="b"))
baseline_farmers$farmer_saved_seed<-ifelse(baseline_farmers$farmer_saved_seed=="TRUE",1,0)
midline_farmers$mid_farmer_saved_seed<-((midline_farmers$check.maize.q32=="a")|(midline_farmers$check.maize.q32=="b"))
midline_farmers$mid_farmer_saved_seed<-ifelse(midline_farmers$mid_farmer_saved_seed=="TRUE",1,0)
endline_farmers$end_farmer_saved_seed<-((endline_farmers$check.maize.q32=="a")|(endline_farmers$check.maize.q32=="b"))
endline_farmers$end_farmer_saved_seed<-ifelse(endline_farmers$end_farmer_saved_seed=="TRUE",1,0)
baseline_farmers$Bought_from_agro_input_shop<-ifelse(baseline_farmers$Check2.check.maize.q32=="d",1,0)
#make panel
#here2
all <- merge(merge(baseline_farmers[c("farmer_ID","shop_ID","Check2.check.maize.q18","Check2.check.maize.q20","Check2.check.maize.q21","correct_spacing", "correct_seed_rate", "organic_use", "DAP_use", "Urea_use", "times_weeding", "pesticide_use", "resowing","time_plant","time_weed","treatment","clearing","training","adoption_onfield", "Land_Races","farmer_saved_seed","Bought_from_agro_input_shop","Check2.check.maize.q9","Check2.check.maize.q57")],midline_farmers[c("farmer_ID","mid_adoption_onfield","mid_Land_Races","mid_farmer_saved_seed","mid_Bought_from_agro_input_shop")]),endline_farmers[c("farmer_ID","end_adoption_onfield","end_Land_Races", "end_farmer_saved_seed","end_Bought_from_agro_input_shop")])
##always adopters
##demean orthogonal treatments
all$clearing <- all$clearing - mean(all$clearing)
all$training <- all$training - mean(all$training)
##  collect results
xmat_base <- cbind(all$adoption_onfield,all$farmer_saved_seed,all$Bought_from_agro_input_shop)
index_base <- icwIndex(xmat=xmat_base,revcols = c(2))
all$index_base <- index_base$index
mean_base <-  array(NA,dim=c(4,2,5))
#loop here over outcomes
outcomes <- c("adoption_onfield","Land_Races","farmer_saved_seed","Bought_from_agro_input_shop","index_base" )
for (i in 1:length(outcomes)) {
mean_base[1,1,i] <- mean(unlist(all[outcomes[i]]), na.rm=TRUE)
mean_base[2,1,i] <- sd(unlist(all[outcomes[i]]), na.rm=TRUE)
ols <- lm(as.formula(paste(outcomes[i],"treatment*clearing*training", sep="~")),data=all)
vcov_cluster <- vcovCR(ols,cluster=all$shop_ID,type="CR0")
coef_test(ols, vcov_cluster)
mean_base[1,2,i] <- coef_test(ols, vcov_cluster)$beta[2]
mean_base[2,2,i] <- coef_test(ols, vcov_cluster)$SE[2]
mean_base[3,2,i] <- coef_test(ols, vcov_cluster)$p_Satt[2]
mean_base[4,2,i] <- nobs(ols)
}
save(mean_base, file=paste(path,"papers/learning_failures/code/output/mean_base.Rdata",sep="/"))
xmat_mid <- cbind(all$mid_adoption_onfield,all$mid_farmer_saved_seed,all$mid_Bought_from_agro_input_shop)
index_mid <- icwIndex(xmat=xmat_mid,revcols = c(2))
all$index_mid <- index_mid$index
### instead of conditioning on baseline adoption, try to condition on baseline
all$Check2.check.maize.q57[all$Check2.check.maize.q57>99] <- NA
ll <- quantile(all[all$adoption_onfield==1,]$Check2.check.maize.q57, c(.33,.66),na.rm=T)[1]
ul <- quantile(all[all$adoption_onfield==1,]$Check2.check.maize.q57, c(.33,.66),na.rm=T)[2]
all$overest <- all$Check2.check.maize.q57>=ul
all$underest <- all$Check2.check.maize.q57<ll
all$corest <- all$Check2.check.maize.q57>=ll & all$Check2.check.maize.q57<ul
mid_adoption <-  array(NA,dim=c(4,3,5)) #here
#loop here over outcomes c("mid_adoption_onfield","mid_Land_Races","mid_Bought_from_agro_input_shop")
outcomes <- c("mid_adoption_onfield","mid_Land_Races","mid_farmer_saved_seed", "mid_Bought_from_agro_input_shop","index_mid")
outcomes_base <- c("adoption_onfield","Land_Races","farmer_saved_seed","Bought_from_agro_input_shop","index_base" )
#"correct_spacing", "correct_seed_rate", "organic_use", "DAP_use", "Urea_use", "times_weeding", "pesticide_use", "resowing","time_plant","time_weed"
xmat_base <- cbind(all$correct_spacing, all$correct_seed_rate, all$organic_use, all$DAP_use, all$Urea_use, all$times_weeding, all$pesticide_use, all$resowing, all$time_plant, all$time_weed)
index_base <- icwIndex(xmat=xmat_base)
all$compl_index <- index_base$index
all$selector_2 <- all$overest == TRUE
all$selector_1 <- all$compl_index < 0
for (i in 1:length(outcomes)) {
ols <- lm(as.formula(paste(outcomes[i],paste("treatment*clearing*training",outcomes_base[i],sep="+"), sep="~")),data=all)
vcov_cluster <- vcovCR(ols,cluster=all$shop_ID,type="CR0")
coef_test(ols, vcov_cluster)
mid_adoption[1,1,i] <- coef_test(ols, vcov_cluster)$beta[2]
mid_adoption[2,1,i] <- coef_test(ols, vcov_cluster)$SE[2]
mid_adoption[3,1,i] <- coef_test(ols, vcov_cluster)$p_Satt[2]
mid_adoption[4,1,i] <- nobs(ols)
ols <- lm(as.formula(paste(outcomes[i],paste("treatment*clearing*training",outcomes_base[i],sep="+"), sep="~")),data=all[all$selector_1==1,])
vcov_cluster <- vcovCR(ols,cluster=all[all$selector_1==1,]$shop_ID,type="CR0")
coef_test(ols, vcov_cluster)
mid_adoption[1,2,i] <- coef_test(ols, vcov_cluster)$beta[2]
mid_adoption[2,2,i] <- coef_test(ols, vcov_cluster)$SE[2]
mid_adoption[3,2,i] <- coef_test(ols, vcov_cluster)$p_Satt[2]
mid_adoption[4,2,i] <- nobs(ols)
ols <- lm(as.formula(paste(outcomes[i],paste("treatment*clearing*training",outcomes_base[i],sep="+"), sep="~")),data=all[all$selector_1==1 & all$selector_2==1,])
vcov_cluster <- vcovCR(ols,cluster=all[all$selector_1==1 & all$selector_2==1 ,]$shop_ID,type="CR0")
coef_test(ols, vcov_cluster)
mid_adoption[1,3,i] <- coef_test(ols, vcov_cluster)$beta[2]
mid_adoption[2,3,i] <- coef_test(ols, vcov_cluster)$SE[2]
mid_adoption[3,3,i] <- coef_test(ols, vcov_cluster)$p_Satt[2]
mid_adoption[4,3,i] <- nobs(ols)
}
xmat_end <- cbind(all$end_adoption_onfield,all$end_farmer_saved_seed,all$end_Bought_from_agro_input_shop)
index_end <- icwIndex(xmat=xmat_end,revcols = c(2))
all$index_end <- index_end$index
end_adoption <-  array(NA,dim=c(4,2,5))
#loop here over outcomes c("mid_adoption_onfield","mid_Land_Races","mid_farmer_saved_seed","end_Bought_from_agro_input_shop")
outcomes <- c("end_adoption_onfield","end_Land_Races","end_farmer_saved_seed","end_Bought_from_agro_input_shop","index_end")
outcomes_base <- c("adoption_onfield","Land_Races","farmer_saved_seed","Bought_from_agro_input_shop","index_base" )
for (i in 1:length(outcomes)) {
ols <- lm(as.formula(paste(outcomes[i],paste("treatment*clearing*training",outcomes_base[i],sep="+"), sep="~")),data=all)
vcov_cluster <- vcovCR(ols,cluster=all$shop_ID,type="CR0")
coef_test(ols, vcov_cluster)
end_adoption[1,1,i] <- coef_test(ols, vcov_cluster)$beta[2]
end_adoption[2,1,i] <- coef_test(ols, vcov_cluster)$SE[2]
end_adoption[3,1,i] <- coef_test(ols, vcov_cluster)$p_Satt[2]
end_adoption[4,1,i] <- nobs(ols)
ols <- lm(as.formula(paste(outcomes[i],paste("treatment*clearing*training",outcomes_base[i],sep="+"), sep="~")),data=all[all$selector==1, ])
vcov_cluster <- vcovCR(ols,cluster=all[all$selector==1 ,]$shop_ID,type="CR0")
coef_test(ols, vcov_cluster)
end_adoption[1,2,i] <- coef_test(ols, vcov_cluster)$beta[2]
end_adoption[2,2,i] <- coef_test(ols, vcov_cluster)$SE[2]
end_adoption[3,2,i] <- coef_test(ols, vcov_cluster)$p_Satt[2]
end_adoption[4,2,i] <- nobs(ols)
}
save(mid_adoption, file=paste(path,"papers/learning_failures/code/output/mid_adoption.Rdata",sep="/"))
save(end_adoption, file=paste(path,"papers/learning_failures/code/output/end_adoption.Rdata",sep="/"))
#### knowledge
all <- merge(merge(baseline_farmers[c("farmer_ID","shop_ID","correct_spacing", "correct_seed_rate", "organic_use", "DAP_use", "Urea_use", "times_weeding", "pesticide_use", "resowing","time_plant","time_weed","treatment","clearing","training","adoption_onfield","Check2.check.maize.q57")],midline_farmers[c("farmer_ID","mid_adoption_onfield")]),endline_farmers[c("farmer_ID","q58_correct","q59_correct","q60_correct","q61_correct","q62_correct","q63_correct")])
##demean orthogonal treatments
all$clearing <- all$clearing - mean(all$clearing)
all$training <- all$training - mean(all$training)
xmat_end <- cbind(all$q58_correct,all$q59_correct,all$q60_correct)
index_end <- icwIndex(xmat=xmat_end)
all$index_end <- index_end$index
all_nt <- subset(all, treatment==FALSE)
mean_know <-  array(NA,dim=c(4,2,7))
#loop here over outcomes
outcomes <- c("q58_correct","q59_correct","q60_correct","q61_correct","q62_correct","q63_correct","index_end")
for (i in 1:length(outcomes)) {
mean_know[1,1,i] <- mean(unlist(all_nt[outcomes[i]]), na.rm=TRUE)
mean_know[2,1,i] <- sd(unlist(all_nt[outcomes[i]]), na.rm=TRUE)
ols <- lm(as.formula(paste(outcomes[i],"treatment*clearing*training", sep="~")),data=all)
vcov_cluster <- vcovCR(ols,cluster=all$shop_ID,type="CR0")
coef_test(ols, vcov_cluster)
mean_know[1,2,i] <- coef_test(ols, vcov_cluster)$beta[2]
mean_know[2,2,i] <- coef_test(ols, vcov_cluster)$SE[2]
mean_know[3,2,i] <- coef_test(ols, vcov_cluster)$p_Satt[2]
mean_know[4,2,i] <- nobs(ols)
}
### instead of conditioning on baseline adoption, try to condition on baseline
all$Check2.check.maize.q57[all$Check2.check.maize.q57>99] <- NA
ll <- quantile(all[all$adoption_onfield==1,]$Check2.check.maize.q57, c(.33,.66),na.rm=T)[1]
ul <- quantile(all[all$adoption_onfield==1,]$Check2.check.maize.q57, c(.33,.66),na.rm=T)[2]
all$overest <- all$Check2.check.maize.q57>=ul
all$underest <- all$Check2.check.maize.q57<ll
all$corest <- all$Check2.check.maize.q57>=ll & all$Check2.check.maize.q57<ul
#"correct_spacing", "correct_seed_rate", "organic_use", "DAP_use", "Urea_use", "times_weeding", "pesticide_use", "resowing","time_plant","time_weed"
xmat_base <- cbind(all$correct_spacing, all$correct_seed_rate, all$organic_use, all$DAP_use, all$Urea_use, all$times_weeding, all$pesticide_use, all$resowing, all$time_plant, all$time_weed)
index_base <- icwIndex(xmat=xmat_base)
all$compl_index <- index_base$index
all$selector_2 <- all$overest == TRUE
all$selector_1 <- all$compl_index < 0
end_knowledge <-  array(NA,dim=c(4,3,7))
#loop here over outcomes c("mid_adoption_onfield","mid_Land_Races","mid_farmer_saved_seed","end_Bought_from_agro_input_shop")
outcomes <- c("q58_correct","q59_correct","q60_correct","q61_correct","q62_correct","q63_correct","index_end")
for (i in 1:length(outcomes)) {
ols <- lm(as.formula(paste(outcomes[i],"treatment*clearing*training", sep="~")),data=all)
vcov_cluster <- vcovCR(ols,cluster=all$shop_ID,type="CR0")
coef_test(ols, vcov_cluster)
end_knowledge[1,1,i] <- coef_test(ols, vcov_cluster)$beta[2]
end_knowledge[2,1,i] <- coef_test(ols, vcov_cluster)$SE[2]
end_knowledge[3,1,i] <- coef_test(ols, vcov_cluster)$p_Satt[2]
end_knowledge[4,1,i] <- nobs(ols)
ols <- lm(as.formula(paste(outcomes[i],"treatment*clearing*training", sep="~")),data=all[all$selector_1==1,])
vcov_cluster <- vcovCR(ols,cluster=all[all$selector_1==1,]$shop_ID,type="CR0")
coef_test(ols, vcov_cluster)
end_knowledge[1,2,i] <- coef_test(ols, vcov_cluster)$beta[2]
end_knowledge[2,2,i] <- coef_test(ols, vcov_cluster)$SE[2]
end_knowledge[3,2,i] <- coef_test(ols, vcov_cluster)$p_Satt[2]
end_knowledge[4,2,i] <- nobs(ols)
ols <- lm(as.formula(paste(outcomes[i],"treatment*clearing*training", sep="~")),data=all[all$selector_2==1 & all$selector_1==1,])
vcov_cluster <- vcovCR(ols,cluster=all[all$selector_2==1 & all$selector_1==1,]$shop_ID,type="CR0")
coef_test(ols, vcov_cluster)
end_knowledge[1,3,i] <- coef_test(ols, vcov_cluster)$beta[2]
end_knowledge[2,3,i] <- coef_test(ols, vcov_cluster)$SE[2]
end_knowledge[3,3,i] <- coef_test(ols, vcov_cluster)$p_Satt[2]
end_knowledge[4,3,i] <- nobs(ols)
}
save(mean_know, file=paste(path,"papers/learning_failures/code/output/mean_know.Rdata",sep="/"))
save(end_knowledge, file=paste(path,"papers/learning_failures/code/output/end_knowledge.Rdata",sep="/"))
### now for inputs and practices
#c("end_correct_spacing", "end_correct_seed_rate", "end_organic_use", "end_DAP_use", "end_Urea_use", "end_times_weeding", "end_pesticide_use", "end_resowing")
all <- merge(merge(baseline_farmers[c("farmer_ID","shop_ID","Check2.check.maize.q18","Check2.check.maize.q20","Check2.check.maize.q21","correct_spacing", "correct_seed_rate", "organic_use", "DAP_use", "Urea_use", "times_weeding", "pesticide_use", "resowing","time_plant","time_weed","treatment","clearing","training","adoption_onfield", "correct_spacing", "correct_seed_rate", "organic_use", "DAP_use", "Urea_use", "times_weeding", "pesticide_use", "resowing","time_plant","time_weed", "Check2.check.maize.q57")],midline_farmers[c("farmer_ID","mid_adoption_onfield","mid_correct_spacing", "mid_correct_seed_rate", "mid_organic_use", "mid_DAP_use", "mid_Urea_use", "mid_times_weeding", "mid_pesticide_use", "mid_resowing","mid_time_plant","mid_time_weed")]),endline_farmers[c("farmer_ID","end_adoption_onfield","end_correct_spacing", "end_correct_seed_rate", "end_organic_use", "end_DAP_use", "end_Urea_use", "end_times_weeding", "end_pesticide_use", "end_resowing","end_time_plant","end_time_weed")])
##demean orthogonal treatments
all$clearing <- all$clearing - mean(all$clearing)
all$training <- all$training - mean(all$training)
xmat_base <- cbind(all$correct_spacing, all$correct_seed_rate, all$organic_use, all$DAP_use, all$Urea_use, all$times_weeding, all$pesticide_use, all$resowing, all$time_plant, all$time_weed)
index_base <- icwIndex(xmat=xmat_base)
all$index_base <- index_base$index
### instead of conditioning on baseline adoption, try to condition on baseline
all$Check2.check.maize.q57[all$Check2.check.maize.q57>99] <- NA
ll <- quantile(all[all$adoption_onfield==1,]$Check2.check.maize.q57, c(.33,.66),na.rm=T)[1]
ul <- quantile(all[all$adoption_onfield==1,]$Check2.check.maize.q57, c(.33,.66),na.rm=T)[2]
all$overest <- all$Check2.check.maize.q57>=ul
all$underest <- all$Check2.check.maize.q57<ll
all$corest <- all$Check2.check.maize.q57>=ll & all$Check2.check.maize.q57<ul
mean_pract <-  array(NA,dim=c(4,2,12))
#loop here over outcomes
outcomes <- c("correct_spacing", "correct_seed_rate", "organic_use", "DAP_use", "Urea_use", "times_weeding", "pesticide_use", "resowing","index_base","time_plant","time_weed", "index_base")
for (i in 1:length(outcomes)) {
mean_pract[1,1,i] <- mean(unlist(all[outcomes[i]]), na.rm=TRUE)
mean_pract[2,1,i] <- sd(unlist(all[outcomes[i]]), na.rm=TRUE)
ols <- lm(as.formula(paste(outcomes[i],"treatment*clearing*training", sep="~")),data=all)
vcov_cluster <- vcovCR(ols,cluster=all$shop_ID,type="CR0")
coef_test(ols, vcov_cluster)
mean_pract[1,2,i] <- coef_test(ols, vcov_cluster)$beta[2]
mean_pract[2,2,i] <- coef_test(ols, vcov_cluster)$SE[2]
mean_pract[3,2,i] <- coef_test(ols, vcov_cluster)$p_Satt[2]
mean_pract[4,2,i] <- nobs(ols)
}
xmat_mid <- cbind(all$mid_organic_use, all$mid_DAP_use, all$mid_Urea_use, all$mid_times_weeding, all$mid_pesticide_use, all$mid_resowing, all$mid_time_weed)
index_mid <- icwIndex(xmat=xmat_mid)
all$index_mid <- index_mid$index
#"correct_spacing", "correct_seed_rate", "organic_use", "DAP_use", "Urea_use", "times_weeding", "pesticide_use", "resowing","time_plant","time_weed"
xmat_base <- cbind(all$correct_spacing, all$correct_seed_rate, all$organic_use, all$DAP_use, all$Urea_use, all$times_weeding, all$pesticide_use, all$resowing, all$time_plant, all$time_weed)
index_base <- icwIndex(xmat=xmat_base)
all$compl_index <- index_base$index
all$selector_2 <- all$overest == TRUE
all$selector_1 <- all$compl_index < 0
mid_practices <-  array(NA,dim=c(4,3,12))
#loop here over outcomes c("mid_adoption_onfield","mid_Land_Races","mid_farmer_saved_seed","mid_Bought_from_agro_input_shop")
outcomes <- c("mid_correct_spacing", "mid_correct_seed_rate", "mid_organic_use", "mid_DAP_use", "mid_Urea_use", "mid_times_weeding", "mid_pesticide_use", "mid_resowing","index_mid","mid_time_plant", "mid_time_weed", "index_mid")
outcomes_base <- c("correct_spacing", "correct_seed_rate", "organic_use", "DAP_use", "Urea_use", "times_weeding", "pesticide_use", "resowing","index_base","time_plant","time_weed","index_base")
for (i in 1:length(outcomes)) {
ols <- lm(as.formula(paste(outcomes[i],paste("treatment*clearing*training",outcomes_base[i],sep="+"), sep="~")),data=all)
vcov_cluster <- vcovCR(ols,cluster=all$shop_ID,type="CR0")
coef_test(ols, vcov_cluster)
mid_practices[1,1,i] <- coef_test(ols, vcov_cluster)$beta[2]
mid_practices[2,1,i] <- coef_test(ols, vcov_cluster)$SE[2]
mid_practices[3,1,i] <- coef_test(ols, vcov_cluster)$p_Satt[2]
mid_practices[4,1,i] <- nobs(ols)
ols <- lm(as.formula(paste(outcomes[i],paste("treatment*clearing*training",outcomes_base[i],sep="+"), sep="~")),data=all[all$selector_1==1,])
vcov_cluster <- vcovCR(ols,cluster=all[all$selector_1==1,]$shop_ID,type="CR0")
coef_test(ols, vcov_cluster)
mid_practices[1,2,i] <- coef_test(ols, vcov_cluster)$beta[2]
mid_practices[2,2,i] <- coef_test(ols, vcov_cluster)$SE[2]
mid_practices[3,2,i] <- coef_test(ols, vcov_cluster)$p_Satt[2]
mid_practices[4,2,i] <- nobs(ols)
ols <- lm(as.formula(paste(outcomes[i],paste("treatment*clearing*training",outcomes_base[i],sep="+"), sep="~")),data=all[all$selector_2==1 & all$selector_1==1,])
vcov_cluster <- vcovCR(ols,cluster=all[all$selector_2==1  & all$selector_1==1,]$shop_ID,type="CR0")
coef_test(ols, vcov_cluster)
mid_practices[1,3,i] <- coef_test(ols, vcov_cluster)$beta[2]
mid_practices[2,3,i] <- coef_test(ols, vcov_cluster)$SE[2]
mid_practices[3,3,i] <- coef_test(ols, vcov_cluster)$p_Satt[2]
mid_practices[4,3,i] <- nobs(ols)
}
xmat_end <- cbind(all$end_correct_spacing, all$end_correct_seed_rate, all$end_organic_use, all$end_DAP_use, all$end_Urea_use, all$end_times_weeding, all$end_pesticide_use, all$end_resowing, all$end_time_plant, all$end_time_weed)
index_end <- icwIndex(xmat=xmat_end)
all$index_end <- index_end$index
end_practices <-  array(NA,dim=c(4,3,11))
#loop here over outcomes c("mid_adoption_onfield","mid_Land_Races","mid_farmer_saved_seed","end_Bought_from_agro_input_shop")
outcomes <- c("end_correct_spacing", "end_correct_seed_rate", "end_organic_use", "end_DAP_use", "end_Urea_use", "end_times_weeding", "end_pesticide_use", "end_resowing","index_end","end_time_plant","end_time_weed")
outcomes_base <- c("correct_spacing", "correct_seed_rate", "organic_use", "DAP_use", "Urea_use", "times_weeding", "pesticide_use", "resowing","index_base","time_plant","time_weed")
for (i in 1:length(outcomes)) {
ols <- lm(as.formula(paste(outcomes[i],paste("treatment*clearing*training",outcomes_base[i],sep="+"), sep="~")),data=all)
vcov_cluster <- vcovCR(ols,cluster=all$shop_ID,type="CR0")
coef_test(ols, vcov_cluster)
end_practices[1,1,i] <- coef_test(ols, vcov_cluster)$beta[2]
end_practices[2,1,i] <- coef_test(ols, vcov_cluster)$SE[2]
end_practices[3,1,i] <- coef_test(ols, vcov_cluster)$p_Satt[2]
end_practices[4,1,i] <- nobs(ols)
ols <- lm(as.formula(paste(outcomes[i],paste("treatment*clearing*training",outcomes_base[i],sep="+"), sep="~")),data=all[all$adoption_onfield==1,])
vcov_cluster <- vcovCR(ols,cluster=all[all$adoption_onfield==1 ,]$shop_ID,type="CR0")
coef_test(ols, vcov_cluster)
end_practices[1,2,i] <- coef_test(ols, vcov_cluster)$beta[2]
end_practices[2,2,i] <- coef_test(ols, vcov_cluster)$SE[2]
end_practices[3,2,i] <- coef_test(ols, vcov_cluster)$p_Satt[2]
end_practices[4,2,i] <- nobs(ols)
ols <- lm(as.formula(paste(outcomes[i],paste("treatment*clearing*training",outcomes_base[i],sep="+"), sep="~")),data=all[all$adoption_onfield==1 & all$mid_adoption_onfield==0 &  all$end_adoption_onfield==1 ,])
vcov_cluster <- vcovCR(ols,cluster=all[all$adoption_onfield==1 & all$mid_adoption_onfield==0 &  all$end_adoption_onfield==1,]$shop_ID,type="CR0")
coef_test(ols, vcov_cluster)
end_practices[1,3,i] <- coef_test(ols, vcov_cluster)$beta[2]
end_practices[2,3,i] <- coef_test(ols, vcov_cluster)$SE[2]
end_practices[3,3,i] <- coef_test(ols, vcov_cluster)$p_Satt[2]
end_practices[4,3,i] <- nobs(ols)
}
save(mean_pract, file=paste(path,"papers/learning_failures/code/output/mean_pract.Rdata",sep="/"))
save(mid_practices, file=paste(path,"papers/learning_failures/code/output/mid_practices.Rdata",sep="/"))
save(end_practices, file=paste(path,"papers/learning_failures/code/output/end_practices.Rdata",sep="/"))
#expectations
baseline_farmers$Check2.check.maize.q57[baseline_farmers$Check2.check.maize.q57 == "999"] <- NA
baseline_farmers$Check2.check.maize.q57[baseline_farmers$Check2.check.maize.q57 > 50] <- NA
baseline_farmers$expectations <- baseline_farmers$Check2.check.maize.q57
midline_farmers$check.maize.q51a[midline_farmers$check.maize.q51a == "n/a"] <- NA
midline_farmers$mid_expectations_met <- midline_farmers$check.maize.q51a== "Yes"
endline_farmers$check.maize.q51a[endline_farmers$check.maize.q51a == "n/a"] <- NA
endline_farmers$end_expectations_met <- endline_farmers$check.maize.q51a== "Yes"
### mismanagement
midline_farmers$mid_myownfault <- NA
midline_farmers$mid_myownfault[midline_farmers$mid_expectations_met==TRUE] <- 0
midline_farmers$mid_myownfault[midline_farmers$check.maize.q51b%in%c("a","b","c","d","96")] <- 0
midline_farmers$mid_myownfault[midline_farmers$check.maize.q51b%in%c("e","f","g","h")] <- 1
endline_farmers$end_myownfault <- NA
endline_farmers$end_myownfault[endline_farmers$end_expectations_met==TRUE] <- 0
endline_farmers$end_myownfault[endline_farmers$check.maize.q51b%in%c("a","b","c","d","96")] <- 0
endline_farmers$end_myownfault[endline_farmers$check.maize.q51b%in%c("e","f","g","h")] <- 1
## poductivity
baseline_farmers$Check2.check.maize.q50 <- as.numeric(as.character(baseline_farmers$Check2.check.maize.q50))
baseline_farmers$check.maize.q51 <- as.numeric(as.character(baseline_farmers$Check2.check.maize.q51))
baseline_farmers$yield_inkg <- baseline_farmers$Check2.check.maize.q50*baseline_farmers$Check2.check.maize.q51
baseline_farmers$yield_inkg_untrimmed <- baseline_farmers$yield_inkg
baseline_farmers <- trim("yield_inkg",baseline_farmers,trim_perc=.05)
baseline_farmers$Check2.check.maize.q29 <- as.numeric(as.character(baseline_farmers$Check2.check.maize.q29))
baseline_farmers$landproductivity <- baseline_farmers$yield_inkg/baseline_farmers$Check2.check.maize.q29
baseline_farmers$landproductivity_untrimmed <- baseline_farmers$landproductivity
baseline_farmers <- trim("landproductivity",baseline_farmers,trim_perc=.05)
midline_farmers$check.maize.q50 <- as.numeric(as.character(midline_farmers$check.maize.q50))
midline_farmers$check.maize.q51 <- as.numeric(as.character(midline_farmers$check.maize.q51))
midline_farmers$mid_yield_inkg <- midline_farmers$check.maize.q50*midline_farmers$check.maize.q51
midline_farmers$mid_yield_inkg_untrimmed <- midline_farmers$mid_yield_inkg
midline_farmers <- trim("mid_yield_inkg",midline_farmers,trim_perc=.05)
midline_farmers$check.maize.q29 <- as.numeric(as.character(midline_farmers$check.maize.q29))
midline_farmers$mid_landproductivity <- midline_farmers$mid_yield_inkg/midline_farmers$check.maize.q29
midline_farmers$mid_landproductivity_untrimmed <- midline_farmers$mid_landproductivity
midline_farmers <- trim("mid_landproductivity",midline_farmers,trim_perc=.05)
endline_farmers$check.maize.q50[endline_farmers$check.maize.q50 ==999] <- NA
endline_farmers$check.maize.q50 <- as.numeric(as.character(endline_farmers$check.maize.q50))
endline_farmers$check.maize.q51 <- as.numeric(as.character(endline_farmers$check.maize.q51))
endline_farmers$end_yield_inkg <- endline_farmers$check.maize.q50*endline_farmers$check.maize.q51
endline_farmers$end_yield_inkg_untrimmed <- endline_farmers$end_yield_inkg
endline_farmers <- trim("end_yield_inkg",endline_farmers,trim_perc=.05)
endline_farmers$check.maize.q29 <- as.numeric(as.character(endline_farmers$check.maize.q29))
endline_farmers$end_landproductivity <- endline_farmers$end_yield_inkg/endline_farmers$check.maize.q29
endline_farmers$end_landproductivity_untrimmed <- endline_farmers$end_landproductivity
endline_farmers <- trim("end_landproductivity",endline_farmers,trim_perc=.05)
all <- merge(merge(baseline_farmers[c("farmer_ID","shop_ID","correct_spacing", "correct_seed_rate", "organic_use", "DAP_use", "Urea_use", "times_weeding", "pesticide_use", "resowing","time_plant","time_weed","treatment","clearing","training","adoption_onfield","expectations","yield_inkg","landproductivity","Check2.check.maize.q57" )],midline_farmers[c("farmer_ID","mid_expectations_met","mid_myownfault","mid_yield_inkg","mid_landproductivity")]),endline_farmers[c("farmer_ID","end_expectations_met","end_myownfault","end_yield_inkg","end_landproductivity")])
##demean orthogonal treatments
all$clearing <- all$clearing - mean(all$clearing)
all$training <- all$training - mean(all$training)
xmat_base <- cbind(all$expectations, all$yield_inkg, all$landproductivity)
index_base <- icwIndex(xmat=xmat_base)
all$index_base <- index_base$index
mean_expectations <-  array(NA,dim=c(4,2,9))
#loop here over outcomes
outcomes <- c("expectations","yield_inkg","landproductivity","index_base")
for (i in 1:length(outcomes)) {
mean_expectations[1,1,i] <- mean(unlist(all[outcomes[i]]), na.rm=TRUE)
mean_expectations[2,1,i] <- sd(unlist(all[outcomes[i]]), na.rm=TRUE)
ols <- lm(as.formula(paste(outcomes[i],"treatment*clearing*training", sep="~")),data=all)
vcov_cluster <- vcovCR(ols,cluster=all$shop_ID,type="CR0")
coef_test(ols, vcov_cluster)
mean_expectations[1,2,i] <- coef_test(ols, vcov_cluster)$beta[2]
mean_expectations[2,2,i] <- coef_test(ols, vcov_cluster)$SE[2]
mean_expectations[3,2,i] <- coef_test(ols, vcov_cluster)$p_Satt[2]
mean_expectations[4,2,i] <- nobs(ols)
}
xmat_mid <- cbind(all$mid_expectations_met)
index_mid <- icwIndex(xmat=xmat_mid)
all$index_mid <- index_mid$index
### instead of conditioning on baseline adoption, try to condition on baseline
all$Check2.check.maize.q57[all$Check2.check.maize.q57>99] <- NA
ll <- quantile(all[all$adoption_onfield==1,]$Check2.check.maize.q57, c(.33,.66),na.rm=T)[1]
ul <- quantile(all[all$adoption_onfield==1,]$Check2.check.maize.q57, c(.33,.66),na.rm=T)[2]
all$overest <- all$Check2.check.maize.q57>=ul
all$underest <- all$Check2.check.maize.q57<ll
all$corest <- all$Check2.check.maize.q57>=ll & all$Check2.check.maize.q57<ul
#"correct_spacing", "correct_seed_rate", "organic_use", "DAP_use", "Urea_use", "times_weeding", "pesticide_use", "resowing","time_plant","time_weed"
xmat_base <- cbind(all$correct_spacing, all$correct_seed_rate, all$organic_use, all$DAP_use, all$Urea_use, all$times_weeding, all$pesticide_use, all$resowing, all$time_plant, all$time_weed)
index_base <- icwIndex(xmat=xmat_base)
all$compl_index <- index_base$index
all$selector_2 <- all$overest == TRUE
all$selector_1 <- all$compl_index < 0
mid_expectations <-  array(NA,dim=c(4,3,5))
#loop here over outcomes c
outcomes <- c("mid_expectations_met","mid_myownfault","mid_yield_inkg","mid_landproductivity","index_mid")
for (i in 1:length(outcomes)) {
ols <- lm(as.formula(paste(outcomes[i],"treatment*clearing*training", sep="~")),data=all)
vcov_cluster <- vcovCR(ols,cluster=all$shop_ID,type="CR0")
coef_test(ols, vcov_cluster)
mid_expectations[1,1,i] <- coef_test(ols, vcov_cluster)$beta[2]
mid_expectations[2,1,i] <- coef_test(ols, vcov_cluster)$SE[2]
mid_expectations[3,1,i] <- coef_test(ols, vcov_cluster)$p_Satt[2]
mid_expectations[4,1,i] <- nobs(ols)
ols <- lm(as.formula(paste(outcomes[i],"treatment*clearing*training", sep="~")),data=all[all$selector_1==1,])
vcov_cluster <- vcovCR(ols,cluster=all[all$selector_1==1,]$shop_ID,type="CR0")
coef_test(ols, vcov_cluster)
mid_expectations[1,2,i] <- coef_test(ols, vcov_cluster)$beta[2]
mid_expectations[2,2,i] <- coef_test(ols, vcov_cluster)$SE[2]
mid_expectations[3,2,i] <- coef_test(ols, vcov_cluster)$p_Satt[2]
mid_expectations[4,2,i] <- nobs(ols)
ols <- lm(as.formula(paste(outcomes[i],"treatment*clearing*training", sep="~")),data=all[all$selector_1==1 & all$selector_2==1,])
vcov_cluster <- vcovCR(ols,cluster=all[all$selector_1==1  & all$selector_2==1,]$shop_ID,type="CR0")
coef_test(ols, vcov_cluster)
mid_expectations[1,3,i] <- coef_test(ols, vcov_cluster)$beta[2]
mid_expectations[2,3,i] <- coef_test(ols, vcov_cluster)$SE[2]
mid_expectations[3,3,i] <- coef_test(ols, vcov_cluster)$p_Satt[2]
mid_expectations[4,3,i] <- nobs(ols)
}
xmat_end <- cbind(all$end_expectations_met, all$end_yield_inkg, all$end_landproductivity)
index_end <- icwIndex(xmat=xmat_end)
all$index_end <- index_end$index
end_expectations <-  array(NA,dim=c(4,4,9))
#loop here over outcomes c
outcomes <- c("end_expectations_met","end_myownfault","end_yield_inkg","end_landproductivity","index_end")
for (i in 1:length(outcomes)) {
ols <- lm(as.formula(paste(outcomes[i],"treatment*clearing*training", sep="~")),data=all)
vcov_cluster <- vcovCR(ols,cluster=all$shop_ID,type="CR0")
coef_test(ols, vcov_cluster)
end_expectations[1,1,i] <- coef_test(ols, vcov_cluster)$beta[2]
end_expectations[2,1,i] <- coef_test(ols, vcov_cluster)$SE[2]
end_expectations[3,1,i] <- coef_test(ols, vcov_cluster)$p_Satt[2]
end_expectations[4,1,i] <- nobs(ols)
ols <- lm(as.formula(paste(outcomes[i],"treatment*clearing*training", sep="~")),data=all[all$selector==1,])
vcov_cluster <- vcovCR(ols,cluster=all[all$selector==1,]$shop_ID,type="CR0")
coef_test(ols, vcov_cluster)
end_expectations[1,2,i] <- coef_test(ols, vcov_cluster)$beta[2]
end_expectations[2,2,i] <- coef_test(ols, vcov_cluster)$SE[2]
end_expectations[3,2,i] <- coef_test(ols, vcov_cluster)$p_Satt[2]
end_expectations[4,2,i] <- nobs(ols)
}
save(mean_expectations, file=paste(path,"papers/learning_failures/code/output/mean_expectations.Rdata",sep="/"))
save(mid_expectations, file=paste(path,"papers/learning_failures/code/output/mid_expectations.Rdata",sep="/"))
save(end_expectations, file=paste(path,"papers/learning_failures/code/output/end_expectations.Rdata",sep="/"))
#
all <- merge(merge(baseline_farmers[c("farmer_ID","shop_ID","treatment","clearing","training","adoption_onfield","Check2.check.maize.q36","Check2.check.maize.q37" )],midline_farmers[c("farmer_ID","mid_adoption_onfield")]),endline_farmers[c("farmer_ID","end_expectations_met","end_myownfault","end_yield_inkg","end_landproductivity")])
##demean orthogonal treatments
### create forest plot
# Load and attach the package
library(ggforestplot)
# Filter only associations to BMI for the first 30 biomarkers of the example
# dataset
df <- data.frame(matrix(ncol = 4, nrow = 0))
x <- c("outcome", "ATE", "se","pval")
colnames(df) <- x
df[1,1] <- "knowledge"
df[1,2:4] <- end_knowledge[1:3,1,7]
df[2,1] <- "adoption"
df[2,2:4] <- mid_adoption[1:3,1,5]
df[3,1] <- "complementary input use"
df[3,2:4] <- mid_practices[1:3,1,12]
df[4,1] <- "correct expectations"
df[4,2:4] <- mid_expectations[1:3,1,1]
# Specify the width of your confidence intervals
interval1 <- -qnorm((1-0.9)/2)  # 90% multiplier
interval2 <- -qnorm((1-0.95)/2)  # 95% multiplier
df$outcome <- factor(df$outcome, levels = c("correct expectations","complementary input use", "adoption","knowledge"))
# Plot
zp1 <- ggplot(df, aes(x=outcome, y=ATE))
zp1 <- zp1 + geom_hline(yintercept = 0, colour = gray(1/2), lty = 2)
zp1 <- zp1 + geom_linerange(aes(x = outcome, ymin = ATE - se*interval1,
ymax = ATE + se*interval1),
lwd = 1, position = position_dodge(width = 1/2))
zp1 <- zp1 + geom_pointrange(aes(x = outcome, y = ATE, ymin = ATE - se*interval2,
ymax = ATE + se*interval2),
lwd = 1/2, position = position_dodge(width = 1/2),
shape = 21, fill = "WHITE")
zp1 <- zp1 + coord_flip()
print(zp1)  # The trick to these is position_dodge().
ggsave("forrest.png", height =3, width = 4,dpi=300)
